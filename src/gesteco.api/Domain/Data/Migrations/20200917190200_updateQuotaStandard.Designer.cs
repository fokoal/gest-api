// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gesteco.api.src.gesteco.WebApi.Database.Data;

namespace gesteco.api.domain.data.migrations
{
    [DbContext(typeof(GestecoContext))]
    [Migration("20200917190200_updateQuotaStandard")]
    partial class updateQuotaStandard
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Adresse", b =>
                {
                    b.Property<string>("IdCivique")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("IdCivique");

                    b.ToTable("Adresse");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Client", b =>
                {
                    b.Property<long>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Courriel")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCivique")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Immaticulation")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NomCommerce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("IdClient");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Ecocentre", b =>
                {
                    b.Property<long>("IdEcocentre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Codepostal")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Rue")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Ville")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdEcocentre");

                    b.ToTable("Ecocentre");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Ecocentre_Matiere", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Comptable")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<long>("IdEcocentre")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdEcocentre");

                    b.ToTable("Ecocentre_Matiere");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Entreprise", b =>
                {
                    b.Property<long>("IdEntreprise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("IClient")
                        .HasColumnType("bigint");

                    b.Property<long>("IdClient")
                        .HasColumnType("bigint");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdEntreprise");

                    b.HasIndex("IdClient");

                    b.ToTable("Entreprise");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Historique_Quota", b =>
                {
                    b.Property<long>("IdHistorique_Quota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateHistorique")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCivique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdQuota")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantite_Initiale")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantite_Utilisee")
                        .HasColumnType("bigint");

                    b.HasKey("IdHistorique_Quota");

                    b.HasIndex("IdQuota");

                    b.ToTable("Historique_Quota");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Matiere", b =>
                {
                    b.Property<long>("IdMatiere")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Comptable")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdMatiere");

                    b.ToTable("Matiere");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Matiere_Visite", b =>
                {
                    b.Property<long>("IdMatiere_Visite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Comptable")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<long>("IdVisite")
                        .HasColumnType("bigint");

                    b.HasKey("IdMatiere_Visite");

                    b.HasIndex("IdVisite");

                    b.ToTable("Matiere_Visite");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.ModePaiement", b =>
                {
                    b.Property<long>("IdModePaiement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdModePaiement");

                    b.ToTable("ModePaiement");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Provenance", b =>
                {
                    b.Property<long>("IdProvenance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("IdCivique")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Quantite_Disponible")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantite_Initiale")
                        .HasColumnType("bigint");

                    b.HasKey("IdProvenance");

                    b.ToTable("Provenance");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Quota", b =>
                {
                    b.Property<long>("IdQuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCivique")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("Quantite_Disponible")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantite_Initiale")
                        .HasColumnType("bigint");

                    b.HasKey("IdQuota");

                    b.HasIndex("IdCivique");

                    b.ToTable("Quota");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Quota_Standard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Quantite")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantite_Commerce")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Quota_Standard");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Tarification", b =>
                {
                    b.Property<long>("IdTarification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.Property<double>("Prix_Commerce")
                        .HasColumnType("float");

                    b.HasKey("IdTarification");

                    b.ToTable("Tarification");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Transaction", b =>
                {
                    b.Property<long>("IdTransaction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Hauteur")
                        .HasColumnType("bigint");

                    b.Property<long>("IdModePaiement")
                        .HasColumnType("bigint");

                    b.Property<long>("IdVisite")
                        .HasColumnType("bigint");

                    b.Property<long>("Largeur")
                        .HasColumnType("bigint");

                    b.Property<long>("Longueur")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantite_Utilisee")
                        .HasColumnType("bigint");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.HasKey("IdTransaction");

                    b.HasIndex("IdModePaiement");

                    b.HasIndex("IdVisite")
                        .IsUnique();

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Visite", b =>
                {
                    b.Property<long>("IdVisite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Employe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IClient")
                        .HasColumnType("bigint");

                    b.Property<long>("IdEcocentre")
                        .HasColumnType("bigint");

                    b.Property<long>("IdProvenance")
                        .HasColumnType("bigint");

                    b.HasKey("IdVisite");

                    b.HasIndex("IClient");

                    b.HasIndex("IdEcocentre");

                    b.HasIndex("IdProvenance");

                    b.ToTable("Visite");
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Ecocentre_Matiere", b =>
                {
                    b.HasOne("gesteco.api.src.gesteco.WebApi.Database.Models.Ecocentre", "Ecocentre")
                        .WithMany("Matieres")
                        .HasForeignKey("IdEcocentre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Entreprise", b =>
                {
                    b.HasOne("gesteco.api.src.gesteco.WebApi.Database.Models.Client", "Client")
                        .WithMany("Entreprises")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Historique_Quota", b =>
                {
                    b.HasOne("gesteco.api.src.gesteco.WebApi.Database.Models.Quota", "Quota")
                        .WithMany("Historiques")
                        .HasForeignKey("IdQuota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Matiere_Visite", b =>
                {
                    b.HasOne("gesteco.api.src.gesteco.WebApi.Database.Models.Visite", "Visite")
                        .WithMany("Matieres")
                        .HasForeignKey("IdVisite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Quota", b =>
                {
                    b.HasOne("gesteco.api.src.gesteco.WebApi.Database.Models.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("IdCivique")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Transaction", b =>
                {
                    b.HasOne("gesteco.api.src.gesteco.WebApi.Database.Models.ModePaiement", "ModePaiement")
                        .WithMany("Transactions")
                        .HasForeignKey("IdModePaiement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gesteco.api.src.gesteco.WebApi.Database.Models.Visite", "Visite")
                        .WithOne("Transaction")
                        .HasForeignKey("gesteco.api.src.gesteco.WebApi.Database.Models.Transaction", "IdVisite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("gesteco.api.src.gesteco.WebApi.Database.Models.Visite", b =>
                {
                    b.HasOne("gesteco.api.src.gesteco.WebApi.Database.Models.Client", "Client")
                        .WithMany("Visites")
                        .HasForeignKey("IClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gesteco.api.src.gesteco.WebApi.Database.Models.Ecocentre", "Ecocentre")
                        .WithMany("Visites")
                        .HasForeignKey("IdEcocentre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gesteco.api.src.gesteco.WebApi.Database.Models.Provenance", "Provenance")
                        .WithMany("Visites")
                        .HasForeignKey("IdProvenance")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
